#---------------------------------------------------------------------------------
.SUFFIXES:
#---------------------------------------------------------------------------------

ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>/devkitARM")
endif

include $(DEVKITARM)/3ds_rules

#---------------------------------------------------------------------------------
BUILD := build  # path for object & intermediate files

#---------------------------------------------------------------------------------
# options for code generation
#---------------------------------------------------------------------------------
ARCH     := -march=armv6k -mtune=mpcore -mfloat-abi=hard -mtp=soft

CFLAGS   := -g -Wall -O2 -mword-relocations -ffunction-sections \
			-fomit-frame-pointer -ffast-math $(ARCH)

CXXFLAGS := $(CFLAGS) -fno-rtti -fno-exceptions -std=gnu++11

ASFLAGS  := -g $(ARCH)

#---------------------------------------------------------------------------------
# list of directories containing libraries, this must be the top level containing
# include and lib
#---------------------------------------------------------------------------------
LIBDIRS  := $(PORTLIBS) $(CTRULIB)

#---------------------------------------------------------------------------------
# no real need to edit anything past this point unless you need to add additional
# rules for different file extensions
#---------------------------------------------------------------------------------

PYVERSION = 3.6.9
ANAME     = libpython$(shell echo $(PYVERSION) | cut -b 1-3).a

# Due to misleading newlib headers, certain functions may be marked as present
# when they're in fact not. These will be later stripped out from pyconfig.h.
INVALID_CONFIG_ENTRIES := CHROOT FCHDIR FDATASYNC SETGROUPS SYMLINK

export OUTPUT := $(CURDIR)/Python-$(PYVERSION)

export INCLUDE := $(foreach dir,$(LIBDIRS),-I$(dir)/include) \
			-I$(CURDIR)/$(BUILD)

CFLAGS   += $(INCLUDE) -DARM11 -D_3DS

export LIBPATHS := $(foreach dir,$(LIBDIRS),-L$(dir)/lib)

#---------------------------------------------------------------------------------
.PHONY: all clean dist

all: distPython

dist: $(OUTPUT)
	zip -r $(OUTPUT).zip $(OUTPUT)

distPython: makePython
	@[ -d "$(OUTPUT)" ] || mkdir -p $(OUTPUT)
	@[ -d "$(OUTPUT)/include" ] || mkdir -p $(OUTPUT)/include
	@[ -d "$(OUTPUT)/lib" ] || mkdir -p $(OUTPUT)/lib
	cp $(ANAME) $(OUTPUT)/lib
	cp -r $(CURDIR)/Include/* $(OUTPUT)/include
	cp pyconfig.h $(OUTPUT)/include
	touch $@

makePython: configurePython
	$(MAKE) $(MAKEFLAGS) -f $(CURDIR)/Makefile LIBRARY="$(ANAME)" LDLIBRARY="$(ANAME)" $(ANAME)
	touch $@

configurePython:
	./configure CC=$(CC) CXX=$(CXX) AS=$(AS) AR=$(AR) OBJCOPY=$(OBJCOPY) STRIP=$(STRIP) NM=$(NM) RANLIB=$(RANLIB) \
	  CFLAGS="$(CFLAGS)" CXXFLAGS="$(CXXFLAGS)" ASFLAGS="$(ASFLAGS)" CONFIG_SITE=config.site \
	  --host=arm-none-eabi --build=`./config.guess` --disable-ipv6 --disable-shared
	$(foreach opt,$(INVALID_CONFIG_ENTRIES),`sed -i "s/#define HAVE_$(opt) 1/\/* #undef HAVE_$(opt) *\//" pyconfig.h`)
	touch $@

clean:
	@rm -rf configurePython makePython distPython $(OUTPUT)*
	make -f $(CURDIR)/Makefile clean
